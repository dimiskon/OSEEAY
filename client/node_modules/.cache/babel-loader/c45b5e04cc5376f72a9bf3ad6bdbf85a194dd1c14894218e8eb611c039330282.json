{"ast":null,"code":"var _jsxFileName = \"/home/animusgr/Documents/OSEEAY/OSEEAY/client/src/components/Staffs/StaffsCreate/CustomTextField.jsx\";\nimport React from \"react\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport { InputLabel, TextField, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomTextField = props => {\n  const {\n    value,\n    isRequired,\n    register,\n    errors,\n    type\n  } = props;\n\n  // console.log({ errors });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"inputLabel\",\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      type: type\n      // @see https://stackoverflow.com/a/66935286\n      ,\n      ...register(`${value}`, {\n        required: {\n          value: true,\n          message: \"Required field\"\n        }\n      }),\n      // error={errors[value]}\n      // helperText={errors[value] ? errors[value].message : null}\n      name: value,\n      autoFocus: true,\n      required: isRequired,\n      variant: \"filled\",\n      placeholder: value + \"...\",\n      label: value,\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      errors: errors,\n      name: value,\n      render: _ref => {\n        let {\n          message\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 34\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = CustomTextField;\nexport default CustomTextField;\nvar _c;\n$RefreshReg$(_c, \"CustomTextField\");","map":{"version":3,"names":["React","ErrorMessage","InputLabel","TextField","Typography","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomTextField","props","value","isRequired","register","errors","type","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","required","message","name","autoFocus","placeholder","label","fullWidth","render","_ref","_c","$RefreshReg$"],"sources":["/home/animusgr/Documents/OSEEAY/OSEEAY/client/src/components/Staffs/StaffsCreate/CustomTextField.jsx"],"sourcesContent":["import React from \"react\";\nimport { ErrorMessage } from \"@hookform/error-message\";\n\nimport { InputLabel, TextField, Typography } from \"@mui/material\";\n\nconst CustomTextField = (props) => {\n  const { value, isRequired, register, errors, type } = props;\n\n  // console.log({ errors });\n  return (\n    <>\n      <InputLabel>\n        <Typography variant=\"inputLabel\">{value}</Typography>\n      </InputLabel>\n      <TextField\n        type={type}\n        // @see https://stackoverflow.com/a/66935286\n        {...register(`${value}`, {\n          required: {\n            value: true,\n            message: \"Required field\",\n          },\n        })}\n        // error={errors[value]}\n        // helperText={errors[value] ? errors[value].message : null}\n        name={value}\n        autoFocus\n        required={isRequired}\n        variant=\"filled\"\n        placeholder={value + \"...\"}\n        label={value}\n        fullWidth\n      />\n      <ErrorMessage\n        errors={errors}\n        name={value}\n        render={({ message }) => <p>{message}</p>}\n      />\n    </>\n  );\n};\n\nexport default CustomTextField;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,yBAAyB;AAEtD,SAASC,UAAU,EAAEC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElE,MAAMC,eAAe,GAAIC,KAAK,IAAK;EACjC,MAAM;IAAEC,KAAK;IAAEC,UAAU;IAAEC,QAAQ;IAAEC,MAAM;IAAEC;EAAK,CAAC,GAAGL,KAAK;;EAE3D;EACA,oBACEJ,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACEV,OAAA,CAACJ,UAAU;MAAAc,QAAA,eACTV,OAAA,CAACF,UAAU;QAACa,OAAO,EAAC,YAAY;QAAAD,QAAA,EAAEL;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAc;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC1C,eACbf,OAAA,CAACH,SAAS;MACRY,IAAI,EAAEA;MACN;MAAA;MAAA,GACIF,QAAQ,CAAE,GAAEF,KAAM,EAAC,EAAE;QACvBW,QAAQ,EAAE;UACRX,KAAK,EAAE,IAAI;UACXY,OAAO,EAAE;QACX;MACF,CAAC,CAAC;MACF;MACA;MACAC,IAAI,EAAEb,KAAM;MACZc,SAAS;MACTH,QAAQ,EAAEV,UAAW;MACrBK,OAAO,EAAC,QAAQ;MAChBS,WAAW,EAAEf,KAAK,GAAG,KAAM;MAC3BgB,KAAK,EAAEhB,KAAM;MACbiB,SAAS;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACT,eACFf,OAAA,CAACL,YAAY;MACXa,MAAM,EAAEA,MAAO;MACfU,IAAI,EAAEb,KAAM;MACZkB,MAAM,EAAEC,IAAA;QAAA,IAAC;UAAEP;QAAQ,CAAC,GAAAO,IAAA;QAAA,oBAAKxB,OAAA;UAAAU,QAAA,EAAIO;QAAO;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK;MAAA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC1C;EAAA,gBACD;AAEP,CAAC;AAACU,EAAA,GAnCItB,eAAe;AAqCrB,eAAeA,eAAe;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}