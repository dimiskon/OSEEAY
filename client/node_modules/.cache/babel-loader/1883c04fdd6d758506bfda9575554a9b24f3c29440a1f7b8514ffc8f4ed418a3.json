{"ast":null,"code":"var _jsxFileName = \"/home/animusgr/Documents/OSEEAY/OSEEAY/client/src/components/Staffs/StaffsCreate/utils/CustomTextField.jsx\";\nimport React from \"react\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport { InputLabel, TextField, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomTextField = props => {\n  var _errors$dataKey, _errors$dataKey2;\n  const {\n    dataKey,\n    name,\n    isRequired,\n    register,\n    errors,\n    type\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"inputLabel\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      type: type\n      // @see https://stackoverflow.com/a/66935286\n      ,\n      ...register(`${dataKey}`, {\n        required: isRequired\n      }),\n      // error={\"Required\"}\n      // helperText={errors[name] ? errors[name].message : null}\n      name: dataKey,\n      autoFocus: true,\n      required: isRequired,\n      variant: \"filled\",\n      placeholder: name + \"...\",\n      label: name,\n      fullWidth: true,\n      error: (_errors$dataKey = errors[dataKey]) !== null && _errors$dataKey !== void 0 && _errors$dataKey.message ? true : false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"p\",\n      color: \"error\",\n      children: (_errors$dataKey2 = errors[dataKey]) === null || _errors$dataKey2 === void 0 ? void 0 : _errors$dataKey2.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = CustomTextField;\nexport default CustomTextField;\nvar _c;\n$RefreshReg$(_c, \"CustomTextField\");","map":{"version":3,"names":["React","ErrorMessage","InputLabel","TextField","Typography","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomTextField","props","_errors$dataKey","_errors$dataKey2","dataKey","name","isRequired","register","errors","type","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","required","autoFocus","placeholder","label","fullWidth","error","message","color","_c","$RefreshReg$"],"sources":["/home/animusgr/Documents/OSEEAY/OSEEAY/client/src/components/Staffs/StaffsCreate/utils/CustomTextField.jsx"],"sourcesContent":["import React from \"react\";\nimport { ErrorMessage } from \"@hookform/error-message\";\n\nimport { InputLabel, TextField, Typography } from \"@mui/material\";\n\nconst CustomTextField = (props) => {\n  const { dataKey, name, isRequired, register, errors, type } = props;\n  return (\n    <>\n      <InputLabel>\n        <Typography variant=\"inputLabel\">{name}</Typography>\n      </InputLabel>\n      <TextField\n        type={type}\n        // @see https://stackoverflow.com/a/66935286\n        {...register(`${dataKey}`, {\n          required: isRequired,\n        })}\n        // error={\"Required\"}\n        // helperText={errors[name] ? errors[name].message : null}\n        name={dataKey}\n        autoFocus\n        required={isRequired}\n        variant=\"filled\"\n        placeholder={name + \"...\"}\n        label={name}\n        fullWidth\n        error={errors[dataKey]?.message ? true : false}\n      />\n      <Typography variant=\"p\" color=\"error\">\n        {errors[dataKey]?.message}\n      </Typography>\n    </>\n  );\n};\n\nexport default CustomTextField;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,yBAAyB;AAEtD,SAASC,UAAU,EAAEC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElE,MAAMC,eAAe,GAAIC,KAAK,IAAK;EAAA,IAAAC,eAAA,EAAAC,gBAAA;EACjC,MAAM;IAAEC,OAAO;IAAEC,IAAI;IAAEC,UAAU;IAAEC,QAAQ;IAAEC,MAAM;IAAEC;EAAK,CAAC,GAAGR,KAAK;EACnE,oBACEJ,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACEb,OAAA,CAACJ,UAAU;MAAAiB,QAAA,eACTb,OAAA,CAACF,UAAU;QAACgB,OAAO,EAAC,YAAY;QAAAD,QAAA,EAAEL;MAAI;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAc;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzC,eACblB,OAAA,CAACH,SAAS;MACRe,IAAI,EAAEA;MACN;MAAA;MAAA,GACIF,QAAQ,CAAE,GAAEH,OAAQ,EAAC,EAAE;QACzBY,QAAQ,EAAEV;MACZ,CAAC,CAAC;MACF;MACA;MACAD,IAAI,EAAED,OAAQ;MACda,SAAS;MACTD,QAAQ,EAAEV,UAAW;MACrBK,OAAO,EAAC,QAAQ;MAChBO,WAAW,EAAEb,IAAI,GAAG,KAAM;MAC1Bc,KAAK,EAAEd,IAAK;MACZe,SAAS;MACTC,KAAK,EAAE,CAAAnB,eAAA,GAAAM,MAAM,CAACJ,OAAO,CAAC,cAAAF,eAAA,eAAfA,eAAA,CAAiBoB,OAAO,GAAG,IAAI,GAAG;IAAM;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC/C,eACFlB,OAAA,CAACF,UAAU;MAACgB,OAAO,EAAC,GAAG;MAACY,KAAK,EAAC,OAAO;MAAAb,QAAA,GAAAP,gBAAA,GAClCK,MAAM,CAACJ,OAAO,CAAC,cAAAD,gBAAA,uBAAfA,gBAAA,CAAiBmB;IAAO;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACd;EAAA,gBACZ;AAEP,CAAC;AAACS,EAAA,GA7BIxB,eAAe;AA+BrB,eAAeA,eAAe;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}